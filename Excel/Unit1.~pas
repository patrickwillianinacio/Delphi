unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, IBSQL, IBCustomDataSet, IBUpdateSQL, DB, IBDatabase, IBQuery,
  StdCtrls, Grids, DBGrids, ComObj, ComCtrls, ExtCtrls;

type
  TForm1 = class(TForm)
    Excel: TButton;
    IBDatabase1: TIBDatabase;
    IBQuery1: TIBQuery;
    IBQuery1NOMEPOSTO: TIBStringField;
    IBQuery1MATERIALCONTA: TIntegerField;
    IBQuery1NOMEMATERIALCONTA: TIBStringField;
    IBQuery1MATERIALSAIDA: TIntegerField;
    IBQuery1NOMEMATERIALSAIDA: TIBStringField;
    IBQuery1SUM: TFloatField;
    IBQuery1SUM1: TFloatField;
    IBTransaction1: TIBTransaction;
    DataSource1: TDataSource;
    IBUpdateSQL1: TIBUpdateSQL;
    IBSQL1: TIBSQL;
    DBGrid1: TDBGrid;

    procedure ExcelClick(Sender: TObject);
  private
    { Private declarations }

  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}


{ TForm1 }

procedure TForm1.ExcelClick(Sender: TObject);
var
   bResult,Result: Boolean;
	SavePlace: TBookmark;
	i,eline, TotalRegistros: Integer;
	Excel, pnlMensagem : OleVariant;
	iSheet: Integer;
	CorFundo: TColor;
   ExcelFile: string;

begin
  bResult:= False;
  // If dataset is assigned and active runs Excel
  if Assigned(DBGrid1.DataSource) then
  begin
	if DBGrid1.DataSource.DataSet.Active then
	begin
	  try
		//Rotina que chama um painel com um ProgressBar
		//SetaPainelMensagem(cExportandoRegistros, TotalRegistros);

		Excel:= CreateOleObject('com.sun.star.ServiceManager');
		Excel.Visible:= False;
		Excel.WorkBooks.Add(1);
		//Definindo o número de worksheets
		if  (TotalRegistros > 65000) then
		begin
		   if  ((TotalRegistros Mod 65000) = 0) then
			   iSheet := TotalRegistros DIV 5
		   else
			   iSheet := (TotalRegistros DIV 65000) + 1;
		   if  (iSheet > 3) then
			 //Adicionando as worksheets que faltam a partir da 3 planilha do excel
			 For i:= 4 to iSheet do
				 Excel.WorkBooks[1].Sheets.Add(null, Excel.WorkBooks[1].Sheets[i-1]);
		end;
		// Save grid Position
		SavePlace:= DBGrid1.DataSource.DataSet.GetBookmark;
		DBGrid1.DataSource.DataSet.First;
		//Sheet atual
		iSheet := 1;
		// Montando cabeçalho da planilha
		if not (DBGrid1.DataSource.DataSet.Eof) then
		begin
		  eline:= 1; // Posicionando na primeira linha da planilha(Sheet) para por o cabeçalho
		  for i:=0 to (DBGrid1.Columns.Count-1) do
		  begin
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)]:= DBGrid1.Columns[i].Title.Caption;
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].ColumnWidth	:= DBGrid1.Columns[i].Field.DisplayWidth;
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Font.FontStyle := 'Negrito';
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Interior.Color := (ColorToRgb(DBGrid1.Columns[i].Title.Color));
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Font.Color:= (ColorToRgb(DBGrid1.Columns[i].Title.Font.Color));
		  end;
		end;
		while not DBGrid1.DataSource.DataSet.Eof do //Preenchendo o restante da planilha com os dados
		begin
		  Inc(eline); //Incrementa a posição da linha para preencher no excel

		  //Atualiza Progressbar
		  //pbInformacao.StepBy(1);
		  Application.ProcessMessages;

		  //Se passar de 65000 linhas, jogar dado na outra planilha, remontando os cabeçalhos antes
		  if (eline > 65000) then
		  begin
			 Inc(iSheet);
			 eline := 1;
			 for i:=0 to (DBGrid1.Columns.Count-1) do
			 begin
				Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)]:= DBGrid1.Columns[i].Title.Caption;
				Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].ColumnWidth:= DBGrid1.Columns[i].Field.DisplayWidth;
				Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Font.FontStyle:= 'Negrito';
				Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Interior.Color:= (ColorToRgb(DBGrid1.Columns[i].Title.Color));
				Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Font.Color:= (ColorToRgb(DBGrid1.Columns[i].Title.Font.Color));
			 end;
			 Inc(eline);
		  end;

		  //Para mudar a cor de fundo da linha da planilha
		  If (eline mod 2) = 0 then
			 CorFundo := clInfoBk
		  else
			 CorFundo := clAqua;

		  for i:=0 to (DBGrid1.Columns.Count-1) do
		  begin
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)]:= DBGrid1.Columns[i].Field.AsString;
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Interior.Color:= (ColorToRgb(CorFundo));
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Font.Color:= (ColorToRgb(DBGrid1.Columns[i].Font.Color));
			Excel.WorkBooks[1].Sheets[iSheet].Cells[eline,(i+1)].Borders.Color:= (ColorToRgb(clGray));
		  end;
		  DBGrid1.DataSource.DataSet.Next;
		end;

		//Ajustando o tamanho das colunas
		For i:= 1 to iSheet do
			Excel.WorkBooks[1].WorkSheets[i].Range['B1','AQ1000'].Columns.AutoFit;

		// Set saved grid position
		DBGrid1.DataSource.DataSet.GotoBookmark(SavePlace);
		// Salvando o arquivo
		Excel.WorkBooks[1].SaveAs(ExcelFile);
		Excel.Quit;
		bResult:= True;
		pnlMensagem.Visible := False;
	  except
		bResult:= False;
		Excel.Quit;
		pnlMensagem.Visible := False;
	  end;
	end;
  end;
  Result := bResult;

end;

end.
